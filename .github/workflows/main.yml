name: autorostering-msi-build

on:
    workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
  

#env:
#  RELEASE_VERSION: '1.3.0.0'
#  ENVIRONMENT: 'Production'
#  BRANCHE: 'RELEASE-1.3'
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ input.environment }}
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'adv-build-svc' }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v3 
      with:
        ref: ${{ github.event.pull_request.head.ref}}
        
    - name: Copy builds to AutoRostering folder
      working-directory: ${{ github.workspace }}
      run: |
        mkdir ./AutoRostering
        mkdir ./AutoRostering/api
        cp -r ./AR_1.2.3/api/* ./AutoRostering/api/
        cp -r ./AR_1.2.3/* ./AutoRostering/
        if [ "${{vars.ENVIRONMENT}}" = "Development" ]; then
          rm ./AutoRostering/api/appsettings.Production.json ./AutoRostering/api/appsettings.json
          mv ./AutoRostering/api/appsettings.Development.json ./AutoRostering/api/appsettings.json 
        fi 
        if [ "${{vars.ENVIRONMENT}}" = "Production" ]; then
          rm ./AutoRostering/api/appsettings.Development.json ./AutoRostering/api/appsettings.json
          mv ./AutoRostering/api/appsettings.Production.json ./AutoRostering/api/appsettings.json 
        fi
        
    - uses: actions/upload-artifact@v2
      with:
        name: AutoRostering
        path: ./AutoRostering/api