{"version":3,"file":"153.7a5f72a36b56017f.js","mappings":"mBAkCAA,WA9BA,SAASC,IACLC,YAAY,CAAEC,OAAQ,MAAOC,QAAS,UAEtCC,MAAM,sBACDC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IAEF,IAAIC,GAA4BD,EAAWE,gCAE3CN,MAHeI,EAAWG,QC+KlB,sBD5K6B,CACjCC,OAAQ,MACRC,QAAS,CACL,eAAgB,2BAEpBC,YAAa,UACbC,SAAU,WACXV,KAAKC,GACGU,QAAQC,IAAI,CAACX,EAASY,OAAQZ,EAASa,UAC/Cd,KAAK,EAAEa,EAAQC,MACC,MAAXD,EACAjB,YAAY,CAAEC,OAAQ,eAAgBC,QAAS,gBAAiBiB,KAAMD,KAEtElB,YAAY,CAAEC,OAAQ,MAAOC,QAAS,oBACtCJ,WAAWC,EAAcS,GAAf,GAEfY,MAAMC,GAASrB,YAAY,CAAEC,OAAQ,MAAOC,QAAS,UAAUmB,EAAMnB,YAhBxE,GAkBHkB,MAAMC,GAASrB,YAAY,CAAEC,OAAQ,MAAOC,QAAS,yBAAyBmB,EAAMnB,YAC5F,EAEwB","names":["setTimeout","refreshToken","postMessage","action","message","fetch","then","response","json","configData","refreshTokenIntervalTime","RefreshTokenIntervalMilliSecond","API_URL","method","headers","credentials","redirect","Promise","all","status","text","body","catch","error"],"sourceRoot":"webpack:///","sources":["./src/app/refresh-auth.worker.ts","./src/app/shared/utils/URLs.ts"],"sourcesContent":["/// <reference lib=\"webworker\" />\r\n\r\nimport { urls } from \"./shared/utils/URLs\";\r\n\r\nfunction refreshToken() {\r\n    postMessage({ action: 'log', message: 'start' });\r\n\r\n    fetch('assets/config.json')\r\n        .then(response => response.json())\r\n        .then(configData => {\r\n            const apiUrl = configData.API_URL;\r\n            let refreshTokenIntervalTime = +configData.RefreshTokenIntervalMilliSecond;\r\n\r\n            fetch( apiUrl + urls.URLRefreshAuth, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'text/html;charset=UTF-8'\r\n                },\r\n                credentials: 'include',\r\n                redirect: 'manual'\r\n            }).then(response => {\r\n                return Promise.all([response.status, response.text()])\r\n            }).then(([status, text]) => {\r\n                if (status === 401) {\r\n                    postMessage({ action: 'authenticate', message: 'Token Expired', body: text })\r\n                } else {\r\n                    postMessage({ action: 'log', message: 'Token Refreshed' })\r\n                    setTimeout(refreshToken, refreshTokenIntervalTime)\r\n                }\r\n            }).catch(error => postMessage({ action: 'log', message: `error: ${error.message}` }))\r\n        })\r\n        .catch(error => postMessage({ action: 'log', message: `error loading config: ${error.message}` }));\r\n}\r\n\r\nsetTimeout(refreshToken, 30000)","export const urls = {\r\n    URLjob: \"jobs\",\r\n    URLbrokenRules: \"Jobs/brokenRules\",\r\n    URLsubgroups: \"subgroups\",\r\n    URLskillmatrices: \"skillmatrices\",\r\n    URLskillcodes: \"skillcodes\",\r\n    URLSkillCodesComboValues: \"SkillCodes/combovalues\",\r\n    URLEmployeeCombosearch: \"Employees/combosearches\",\r\n    URLschedules: \"schedules\",\r\n    URLjobtype: \"jobtype\",\r\n    URLemployees: \"employees\",\r\n    URLEmployeeSchedHrsStatusColor: \"employeeSchedHrsStatuses\",\r\n    URLEmployeeSchedHrsStatusDefaultColor: \"employeeSchedHrsStatuses/default\",\r\n    URLjobStatusColor: \"jobstatuses\",\r\n    URLjobStatusDefaultColor: \"jobstatuses/default\",\r\n    URLdates: \"scheduleDatePreference\",\r\n    URLemployeeAlloedTradeField: \"employees/allowedTradeField\",\r\n    //   URLlogin: \"employees/login\",\r\n    //   URLresetPassword: \"employees/resetPassword\",\r\n    URLlocales: \"locales\",\r\n    URLsecurity: \"Security\",\r\n    URLemailPrefs: \"emailSettings\",\r\n    URLemailPrefsTestConnection: \"emailSettings/test\",\r\n    URLlicense: \"licenses\",\r\n    URLnewLicense: \"newLicense\",\r\n\r\n    //Rankings\r\n    URLrankingsGetAllRankingsBySchedule: \"rankings/schedule\",\r\n    URLrankings: \"rankings\",\r\n    URLrankingsByRankingID: \"rankings/rankingRules\",\r\n    URLrankingsEmployeeFields: \"rankings/employeeFields\",\r\n    URLUserCombosearch: \"user/dropdown\",\r\n    URLusers: \"user\",\r\n    URLattendanceConfirmationListOfUsers: \"user/attendanceConfirmationUserList\",\r\n    URLloneWorkerListOfUsers: \"user/loneWorkerUserList\",\r\n    URLloneWorkerListOfAdmins: \"user/loneWorkerAdminList\",\r\n\r\n    //Profiles\r\n    URLprofiles: \"profiles\",\r\n    URLprofilesTabsList: \"permissionTypes\",\r\n    URLprofilesTabsOptionsList: \"permissionOptions\",\r\n\r\n    //Ranking Types\r\n    URLrankingTypes: \"rankingtypes\",\r\n\r\n    URLSkillMatricesCombosearch: \"skillmatrices/combosearches\",\r\n\r\n    URLschedulesGetAllSchedules: \"schedules\",\r\n    URLScheduleNameList: \"schedules/scheduleNameList\",\r\n    //TODO Nikola\r\n    // endpoint for getting a single schedule for the logged user\r\n    //URLschedulesGetScheduleForEmployee: \"schedule\",\r\n    URLschedulesGetJobsBySubgroups: \"jobs/jobs\",\r\n    URLschedulesGetJobsByJobTypes: \"jobs/jobsByJobType\",\r\n    URLemployeeSchedulesGetJobsByJobTypes: \"scheduleapproved/jobsByJobType\",\r\n    URLschedulesUpdateEventAfterDrag: \"jobs\",\r\n    URLsubgroup: \"subgroup\",\r\n    URLsubgroupsDropdown: \"subgroups/dropdown\",\r\n    URLschedulesGetScheduleSubgroups: \"Schedules/calendar/subgroups\",\r\n    URLabsenceCodes: \"AbsenceCode\",\r\n    URLcustomData: \"CustomData\",\r\n    URLcustomDataLookups: \"CustomDataLookups\",\r\n    URLcustomDataTypes: \"CustomDataTypes\",\r\n    URLgetAllJobStatuses: \"JobStatuses\",\r\n    URLjobTypeAllowedTrade: \"jobType/allowedTrade\",\r\n    URLconstraints: \"Constraints\",\r\n    URLschedulePreference: \"SchedulePreference\",\r\n    URLautoSolve: \"AutoSolve\",\r\n    URLlocation: \"Locations\",\r\n    URLdepartment: \"Departments\",\r\n    URLcostCodes: \"CostCodes\",\r\n    URLdivisions: \"Divisions\",\r\n    URLjobTitles: \"JobTitles\",\r\n    URLclasses: \"Classes\",\r\n    URLteams: \"Teams\",\r\n    URLprofilePermissions: \"profiles/profilePermissions\",\r\n    URLlinkedAccount: \"user/linkedAccount\",\r\n    URLlinkedEmployeeRights: \"profiles/linkedEmployeeRights\",\r\n    URLAdvancedSSO : \"AdvancedSSO\",\r\n\r\n    URLsync: \"Sync\",\r\n    URLsyncSettings: \"SyncSettings\",\r\n    URLEmployeeTileFields: \"employeeTiles\",\r\n\r\n    //URL for GDPR\r\n    URLgdpr: \"GDPR\",\r\n\r\n    URLspecialDates: \"SpecialDates\",\r\n    URLspecialDateTypes: \"SpecialDateTypes\",\r\n\r\n\r\n    //URL for insert cut-off time\r\n    URLcutOffTime: \"AutoSolveTime\",\r\n\r\n    //Authentication\r\n    URLrefreshToken: \"account/refreshToken\",\r\n    URLlogin: \"account/login\",\r\n    URLlogout: \"account/logout\",\r\n    URLresetPassword: \"account/resetPassword\",\r\n    URLswitchAccounts: \"account/switchAccounts\",\r\n    URLaccountValidate: \"account/validate\",    \r\n    URLcheckEmail: \"account/isEmailUnique\",    \r\n\r\n    //reports\r\n    URLreport: \"report/\",\r\n    //URL for Notifications\r\n    URLnotifications: \"notifications\",\r\n    URLabsences: \"Absences\",\r\n    URLabsencesAuthorisationList: \"Absences/authorisationlist\",\r\n    URLabsencePreferences: \"AbsencePreferences\",\r\n    URLpushNotifications: \"PushNotification\",\r\n    //For future development\r\n    URLdashboard: \"dashboard\",\r\n\r\n\r\n    //For schedule submissions\r\n    URLsubGroupsApproval: \"SubGroupsApproval\",\r\n    URLcheckForCachedChanges: \"SubGroupsApproval/anyChanges\",\r\n    URLcheckIfJobInPast: \"SubGroupsApproval/jobInPast\",\r\n\r\n    //URL for templates\r\n    URLtemplates: \"Templates\",\r\n    URLTemplateCombosearch: \"templates/combosearch\",\r\n    URLTemplateDropdown: \"templates/dropdown\",\r\n    URLtemplateSchedules: \"templateSchedules\",\r\n    URLtemplateSchedulesGetScheduleSubgroups: \"templateSchedules/calendar/subgroups\",\r\n    URLtemplateSchedulesGetJobsByJobTypes: \"templateJobs/jobsByJobType\",\r\n    URLtemplateJob: \"templateJobs\",\r\n    URLtemplatesUpdateEventAfterDrag: \"templateJobs\",\r\n    URLtemplateSubgroups: \"templateSubgroups\",\r\n    // URLtemplateSubGroupCustomDatas: \"templateSubGroupCustomDatas\",\r\n    URLtemplateBrokenRules: \"TemplateJobs/brokenRules\",\r\n    URLinsertedTemplates: \"templates/insertedTemplates\",\r\n    URLinsertTemplate: \"templates/insert\",\r\n    URLinsertTemplatesRotations: \"templates/rotations\",\r\n    // URLtemplateScheduleCustomDatas: \"templateScheduleCustomDatas\", Is this necessary(after meeting with John)\r\n\r\n    //shifts\r\n    URLshifts: \"shifts\",\r\n\r\n    //Lone Worker\r\n    URLloneWorker: \"loneWorker/loneWorkerAlerts\",\r\n    URLloneWorkerBase: \"loneWorker\",\r\n    URLloneWorkerCombosearch: \"loneWorker/dropdown\",\r\n    URLloneWorkerCheckIn: \"loneWorker/loneWorkerCheckIn\",\r\n    URLloneWorkerTransactionLog: \"loneWorker/loneWorkerTransactionLogs\",\r\n\r\n    URLemployeeAttendance: \"attendanceConfirmation\",\r\n\r\n    //job offers\r\n    URLjobOffers: \"JobOffers\",\r\n    //trades\r\n    URLtrades: \"Trades\",\r\n\r\n    URLemployeeDashboard: \"EmployeeDashboard\",\r\n    URLuserDashboard: \"UserDashboard\",\r\n\r\n    //Agency URLs\r\n    URLagency: \"agency\",\r\n    URLagencyAssign: \"agency/assign\",\r\n    URLagencyUnassign: \"agency/unassign\",\r\n    URLagencyTable: \"agency/table\",\r\n    URLagencyTableSearch: \"agency/search\",\r\n    URLagencyNameCheck: \"agency/name\",\r\n    URLagencyComboValues: \"agency/combovalues\",\r\n\r\n    //Regenerate API key\r\n    URLregenerateAPIkey: \"Account/apiKey\",\r\n\r\n    //attendance confirmation\r\n    URLattendanceConfirmation: \"attendanceConfirmation\",\r\n\r\n    //Audit Trail\r\n    URLAuditTrail: \"auditTrail\",\r\n\r\n    URLUserEmployeeCount: \"account/userEmployeeCount\",\r\n    URLMigrationDetails: \"advancedSSO/getMigrationRecordActiveCount\",\r\n    URLMigrationDetailsAsExcel: \"advancedSSO/getMigrationDetailsAsExcel\",\r\n    URLSsoLoginDetails: \"advancedSSO/loginDetails\",\r\n\r\n    //Mobile Connection\r\n    URLMobileConnection: \"advanced-people-connection-mappings\",\r\n\r\n    //Config settings\r\n    URLConfigSettings: \"ConfigSettings\",\r\n    URLRefreshAuth: \"account/refreshauth\"\r\n};\r\n"],"x_google_ignoreList":[]}